apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
       compose.cmd: compose convert -f docker-compose.yml -o k8s.yaml
       compose.version: 1.25.0 (f3a463f)
      creationTimestamp: null
      labels:
        io.compose.service: api
      name: api
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.compose.service: api
      status:
        loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        compose.cmd: compose convert -f docker-compose.yml -o k8s.yaml
        compose.version: 1.25.0 (f3a463f)
      creationTimestamp: null
      labels:
        io.compose.service: frontend
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        compose.cmd: compose convert -f docker-compose.yml -o k8s.yaml
        compose.version: 1.25.0 (f3a463f)
      creationTimestamp: null
      labels:
        io.compose.service: mongo1
      status:
        loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        compose.cmd: compose convert -f docker-compose.yml -o k8s.yaml
        compose.version: 1.25.0 (f3a463f)
      creationTimestamp: null
      labels:
        io.compose.service: mongo2
      name: mongo2
    spec:
     ports:
      - name: "27017"
        port: 27017
        targetPort: 27017
    selector:
      io.compose.service: mongo2
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
     annotations:
      compose.cmd: compose convert -f docker-compose.yml -o k8s.yaml
      compose.version: 1.25.0 (f3a463f)
    creationTimestamp: null
    labels:
      io.compose.service: mongo3
    name: mongo3
    spec:
     port:
      - name: "27017"
        port: 27017
        targetPort: 27017
    selector:
      io.compose.service: mongo3
    status:
      loadBalancer: {}